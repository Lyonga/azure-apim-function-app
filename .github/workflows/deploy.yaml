name: Terraform Deploy

on:
  push:
    branches:
      - main

jobs:
  terraform:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Install Terraform
      uses: hashicorp/setup-terraform@v1

    - name: Azure CLI Login
      run: |
        az login --service-principal -u ${{ secrets.ARM_CLIENT_ID }} -p ${{ secrets.ARM_CLIENT_SECRET }} --tenant ${{ secrets.ARM_TENANT_ID }}

    - name: Purge Soft-Deleted API Management Service
      run: |
        API_MANAGEMENT_ID=$(az resource list --resource-type "Microsoft.ApiManagement/service" --query "[?contains(name, 'apim-someone-testing-apim')].id" -o tsv)
        if [ -n "$API_MANAGEMENT_ID" ]; then
          az resource delete --ids $API_MANAGEMENT_ID --force-deletion
        fi

    - name: Terraform Init
      run: terraform init

    - name: Terraform Plan
      run: terraform plan

    - name: Terraform Apply
      run: terraform apply -auto-approve

    # - name: Terraform Destroy
    #   run: terraform destroy -auto-approve

    env:
      ARM_CLIENT_ID: ${{ secrets.ARM_CLIENT_ID }}
      ARM_CLIENT_SECRET: ${{ secrets.ARM_CLIENT_SECRET }}
      ARM_SUBSCRIPTION_ID: ${{ secrets.ARM_SUBSCRIPTION_ID }}
      ARM_TENANT_ID: ${{ secrets.ARM_TENANT_ID }}

# # Create the resource group
# az group create --name myResourceGroup --location "West Europe"

# # Create the storage account
# az storage account create --name mystorageaccount --resource-group myResourceGroup --location "West Europe" --sku Standard_LRS

